/*
 * Copyright 2017 Danang Galuh Tegar P.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.jogjadamai.infest.customer;

import com.jogjadamai.infest.comboboxmodel.TablesComboBoxModel;
import com.jogjadamai.infest.entity.Tables;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Danang Galuh Tegar P
 */
public class AskTableDialog extends javax.swing.JDialog {

    private final List<Tables> tableList;
    private final javax.swing.ComboBoxModel allTablesComboBoxModel;

    private Tables selectedTable = null;
    
    private static AskTableDialog INSTANCE;
    
    /**
     * Creates new form AskTableDialog
     * @param tableList
     * @return 
     */
    public static AskTableDialog getDialogInstance(List<Tables> tableList) {
        if(INSTANCE==null) {
            INSTANCE = new AskTableDialog(null, tableList); 
            INSTANCE.getContentPane().setBackground(new java.awt.Color(255,255,255));
            INSTANCE.setLocationRelativeTo(null);
        }
        return INSTANCE;
    }
    
    private AskTableDialog(java.awt.Frame parent, List<Tables> tableList) {
        super(parent, true);
        this.tableList = tableList;
        this.allTablesComboBoxModel = new TablesComboBoxModel(this.tableList);
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableListComboBox = new javax.swing.JComboBox<>();
        chooseTableButton = new org.jdesktop.swingx.JXButton();
        descriptionPane = new javax.swing.JPanel();
        descriptionLabel = new org.jdesktop.swingx.JXLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("INFEST: Customer >> Set Active Table");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(0xffffff));
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/com/jogjadamai/infest/assets/InfestIcon.png")).getImage());
        setName("askTableDialog"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        tableListComboBox.setModel(allTablesComboBoxModel);
        tableListComboBox.setToolTipText("Choose table to activate.");
        tableListComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tableListComboBoxItemStateChanged(evt);
            }
        });
        tableListComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableListComboBoxActionPerformed(evt);
            }
        });

        chooseTableButton.setText("Choose");
        chooseTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseTableButtonActionPerformed(evt);
            }
        });

        descriptionPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Table Description"));
        descriptionPane.setToolTipText("Description Pane.");
        descriptionPane.setOpaque(false);

        descriptionLabel.setText("<html>" + "" + "</html>");
        descriptionLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        descriptionLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        descriptionLabel.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout descriptionPaneLayout = new javax.swing.GroupLayout(descriptionPane);
        descriptionPane.setLayout(descriptionPaneLayout);
        descriptionPaneLayout.setHorizontalGroup(
            descriptionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(descriptionPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(descriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        descriptionPaneLayout.setVerticalGroup(
            descriptionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(descriptionPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(descriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tableListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(chooseTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tableListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descriptionPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void tableListComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tableListComboBoxItemStateChanged
        selectedTable = this.tableList.get(tableListComboBox.getSelectedIndex());
        setTableDescription(selectedTable.getDescription());
    }//GEN-LAST:event_tableListComboBoxItemStateChanged

    private void chooseTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseTableButtonActionPerformed
        Customer controller = Customer.getInstance();
        if(selectedTable != null || tableListComboBox.getSelectedIndex() != -1) {
            controller.activeTable = selectedTable;
            controller.askTable();
            dispose();
        } else {
            JOptionPane.showMessageDialog(this,
                    "You must set the Table for this Customer!",
                    getTitle(), 
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_chooseTableButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        Customer controller = Customer.getInstance();
        if(controller.activeTable == null) controller.shutdown();
    }//GEN-LAST:event_formWindowClosed

    private void tableListComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableListComboBoxActionPerformed
//        chooseTableButtonActionPerformed(evt);
    }//GEN-LAST:event_tableListComboBoxActionPerformed

    private void setTableDescription(String tableDescription) {
        this.descriptionLabel.setText("<html>" + tableDescription + "</html>");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton chooseTableButton;
    private org.jdesktop.swingx.JXLabel descriptionLabel;
    private javax.swing.JPanel descriptionPane;
    private javax.swing.JComboBox<String> tableListComboBox;
    // End of variables declaration//GEN-END:variables
}
